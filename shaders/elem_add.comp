#version 450
layout (local_size_x = 16) in;

layout(binding = 0) buffer Product {
    float product[];
};

layout(binding = 1) readonly buffer Scalars {
    float scalars[];
};

layout(push_constant) uniform Consts {
    uint layer_size;
};

void main() {
    uint gid = gl_GlobalInvocationID.x;
    if (gid >= layer_size) return;
    uint product_layers = product.length() / layer_size;
    uint scalar_layers = scalars.length() / layer_size;

    for (uint l = 0; l < max(scalar_layers, product_layers); l++) {
        product[gid + layer_size * (l % product_layers)] += scalars[gid + layer_size * (l % scalar_layers)];
    }
}
